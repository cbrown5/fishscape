x <- rnorm(100)
dat <- data.frame(x = x, y = 0.5*x + rnorm(100, sd = 2))
library(ggplot2)
library(ggthemes)
ggplot(dat, aes(x = x, y = y)) + geom_point() +
theme_excel()
x <- rnorm(100)
dat <- data.frame(x = x, y = 0.5*x + rnorm(100, sd = 1))
library(ggplot2)
library(ggthemes)
ggplot(dat, aes(x = x, y = y)) + geom_point() +
theme_excel()
x <- rnorm(100)
dat <- data.frame(x = x, y = 0.25*x + rnorm(100, sd = 1))
library(ggplot2)
library(ggthemes)
ggplot(dat, aes(x = x, y = y)) + geom_point() +
theme_excel()
x <- rnorm(100)
dat <- data.frame(x = x, y = 0.25*x + rnorm(100, sd = 0.2))
library(ggplot2)
library(ggthemes)
ggplot(dat, aes(x = x, y = y)) + geom_point() +
theme_excel()
ggplot(dat, aes(x = x, y = y)) + geom_point() +
theme_bw()
ggplot(dat, aes(x = x, y = y)) + geom_point() +
theme_base()
plot(dat$x, dat$y, xlab = "x", ylab = "y", las = 1)
ggplot(dat, aes(x = x, y = y)) + geom_point() +
theme_gdocs()
ggplot(dat, aes(x = x, y = y)) + geom_point() +
theme_hc()
ggplot(dat, aes(x = x, y = y)) + geom_point() +
theme_tufte()+theme(axis.text=element_text(size=12),
axis.title=element_text(size=14,face="bold"))
x <- 1:100
y <- 0.2 * x*(1- (x/100))
plot(x,y)
plot(x,y, type = 'l, xlab ="Complexity of the problem", ylab = "Preference for graphics packages", xaxt ='n', yaxt = 'n', lwd = 2, col = "lightblue")
x <- 1:100
y <- 0.2 * x*(1- (x/100))
plot(x,y, type ="l", xlab ="Complexity of the problem", ylab = "Preference for graphics packages", xaxt ="n", yaxt = "n", lwd = 2, col = "lightblue")
x <- 1:100
y <- 0.2 * x*(1- (x/100))
plot(x,y, type ="l", xlab ="Complexity of the dataviz", ylab = "Preference for graphics packages", xaxt ="n", yaxt = "n", lwd = 2, col = "navyblue")
axis(1, at = c(1, 100), labels = c("Simple", "Complex"))
x <- 1:100
y <- 0.2 * x*(1- (x/100))
plot(x,y, type ="l", xlab ="Complexity of the dataviz", ylab = "Preference for graphics packages", xaxt ="n", yaxt = "n", lwd = 2, col = "navyblue")
axis(1, at = c(1, 100), labels = c("Simple", "Complex"))
axis(2, at = c(1, 100), labels = c("Base R", "ggplot2"))
x <- 1:100
y <- 0.2 * x*(1- (x/100))
plot(x,y, type ="l", xlab ="Complexity of the dataviz", ylab = "Preference for graphics packages", xaxt ="n", yaxt = "n", lwd = 2, col = "navyblue")
axis(1, at = c(1, 100), labels = c("Simple", "Complex"))
axis(2, at = c(1, 25), labels = c("Base R", "ggplot2"))
x <- 1:100
y <- 0.2 * x*(1- (x/100))
plot(x,y, type ="l", xlab ="Complexity of the dataviz", ylab = "Preference for graphics packages", xaxt ="n", yaxt = "n", lwd = 2, col = "navyblue")
axis(1, at = c(1, 100), labels = c("Simple", "Complex"))
axis(2, at = c(1, 5), labels = c("Base R", "ggplot2"))
x1 <- rnorm(30)
grps <- letters[c(rep(1, 10), rep(2, 10), rep(3, 10))]
y1 <- x + c(rep(1, 10), rep(-1, 10), rep(2, 10))
dat <- data.frame(x = x, grps = grps, y = y)
x1 <- rnorm(30)
dat <- data.frame(x = x1, grps = grps, y = y1)
x1 <- rnorm(30)
grps <- letters[c(rep(1, 10), rep(2, 10), rep(3, 10))]
grps
y1 <- x + c(rep(1, 10), rep(-1, 10), rep(2, 10))
c(rep(1, 10), rep(-1, 10), rep(2, 10))
y1 <- x1 + c(rep(1, 10), rep(-1, 10), rep(2, 10))
dat <- data.frame(x = x1, grps = grps, y = y1)
ggplot(dat, aes(x = x1, y = y1, color = grps)) + geom_point()
ggplot(dat, aes(x = x1, y = y1)) +
geom_point() + facet_wrap(~grps)
theme_bw()
x1 <- rnorm(30)
grps <- letters[c(rep(1, 10), rep(2, 10), rep(3, 10))]
y1 <- x1 + c(rep(1, 10), rep(-1, 10), rep(2, 10)) + rnorm(30)
dat <- data.frame(x = x1, grps = grps, y = y1)
head(dat)
ggplot(dat, aes(x = x1, y = y1, color = grps)) +
geom_point() + theme_tufte()
ggplot(dat, aes(x = x1, y = y1, color = grps)) +
geom_point() + theme_bw()
ggplot(dat, aes(x = x1, y = y1)) +
geom_point() + facet_wrap(~grps)+
theme_bw()
install.packages("wes_palette")
install.packages("wesanderson")
wes_palette("Darjeeling1")
library(wesanderson)
wes_palette("Darjeeling1")
wes_palette("darjeeling1")
wes_palette("darjeeling")
?wes_palette
devtools::install_github("karthik/wesanderson")
wes_palette("darjeeling1")
wes_palette("Darjeeling1")
x=wes_palette("Darjeeling1")
x
x
x[1]
x[]
x=wes_palette("Darjeeling2")
x[]
wes_palette("Darjeeling2")
x[]
getwd()
install.packages("faraway")
library(faraway)
data(eggs)
nrow(eggs)
eggs
install.packages("gstat")
library(gstat)
install.packages("xts")
install.packages("seplyr")
install.packages("RWeka")
library(RWeka)
install.packages("tau")
install.packages("RTextTools")
install.packages("SDMTools")
2000/50
hist(rnorm(100))
hist(rnorm(100, sd = 1.5))
t = 1:100
a = 2
y = a*t
plot(t, y)
plot(t, exp(y)
)
t <- seq(0, 10, length.out = 1000)
c = 100 * (1-exp((-2 * t)/100))
plot(t, c)
diff(c)
plot(diff(c))
t <- 0:100
plot(t, c)
c = 100 * (1-exp((-2 * t)/100))
plot(t, c)
c = 100 * (1-exp((-10 * t)/100))
plot(t, c)
max(c)
diff(c)
plot(diff(c))
max(diff(c))
c = 100 * (1-exp((-10 * t)/100))
t <- seq(0, 100, length.out = 100000)
c = 100 * (1-exp((-10 * t)/100))
max(diff(c))
t
diff(t)
max(diff(c))*1000
c = 100 * (1-exp((-10 * (t-5))/100))
max(diff(c))*1000
t
min(t)
min(c)
c = 100 * (1-exp((-10 * (t-5))/100))
max(diff(c))
t
max(diff(c))*1000
c = 10 * exp(-50/1000)
c
c = -10 * exp(50/1000)
c
min(t)
-10 * exp((10 * (0- -5))/1000)
-10 * exp((10 * (0- 5))/1000)
10 * exp((-10 * (0- 5))/1000)
max(diff(c))*1000
10 * exp(-(-50/1000))
min(t)
c = 100 * (1-exp((-10 * (t-5))/100))
max(diff(c))
max(diff(c))* 1000
10 * exp(-(-50/1000))
10 * exp(-(50/1000))
10 * exp(-(50/1000))
t <- seq(0, 100, by = 0.001)
c = 100 * (1-exp((-10 * (t-5))/100))
max(diff(c))
max(diff(c))*1000
c = 100 * (1-exp((-10 * (t+5))/100))
max(diff(c))
max(diff(c))*1000
10 * exp(-(50/100))
x <- matrix(1, nrow = 5)
y <- matrix(2, ncol = 5)
x
y
x %*% y
y %*% x
y <- matrix(2, ncol = 3)
y %*% x
x %*% y
y <- matrix(2, nrow = 3)
x %*% y
x <- matrix(1, ncol  = 5)
x %*% y
y %*% x
y <- matrix(2, ncol = 5)
x %*% y
y %*% x
x
y
x <- matrix(1, nrow = 5)
y %*% x
0.026*2000
library(ILNA)
library(INLA)
inla
?inla
library(INLA)
?inla
pubs <- read_csv("/Users/s2973410/Documents/Webpage/webpage/_data/pubs.csv")
library(readr)
library(dplyr)
library(stringr)
pubs <- read_csv("/Users/s2973410/Documents/Webpage/webpage/_data/pubs.csv")
npubs_hdr <- nrow(pubs)
library(extraDistr)
vars <- rdirichlet(10000, alpha = c(1,1,1))
hist(vars[,1])
hist(vars[,1])
#check to see if ilr transform of dirichlet is normal...
library(extraDistr)
n.sources <- 3
p.global <- rdirichlet(10000, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- rep(NA, n.sources -1)
src=1
gmean[src] <- prod(p.global[1:src])^(1/src);
gmean
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
n.sources <- 3
n <- 10000
p.global <- rdirichlet(n, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
ilr.global
hist(ilr.global[,1])
qqnorm(ilr.global[,1])
abline(0,1)
qqnorm(ilr.global[,2])
abline(0,1)
n.sources <- 6
n <- 10000
p.global <- rdirichlet(n, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
qqnorm(ilr.global[,2])
abline(0,1)
n.sources <- 10
n <- 10000
p.global <- rdirichlet(n, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
qqnorm(ilr.global[,2])
abline(0,1)
n.sources <- 2
n <- 10000
p.global <- rdirichlet(n, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
qqnorm(ilr.global[,2])
abline(0,1)
qqnorm(ilr.global[,1])
abline(0,1)
n.sources <- 5
n <- 10000
p.global <- rdirichlet(n, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
qqnorm(ilr.global[,1])
abline(0,1)
n.sources <- 5
n <- 100000
p.global <- rdirichlet(n, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
qqnorm(ilr.global[,1])
abline(0,1)
shapiro.test(ilr.global[,1])
n.sources <- 5
n <- 5000
p.global <- rdirichlet(n, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
qqnorm(ilr.global[,1])
abline(0,1)
shapiro.test(ilr.global[,1])
shapiro.test(rnorm(5000))
n.sources <- 2
n <- 5000
p.global <- rdirichlet(n, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
qqnorm(ilr.global[,1])
abline(0,1)
shapiro.test(ilr.global[,1])
shapiro.test(rnorm(5000))
n.sources <- 2
n <- 5000
p.global <- rdirichlet(n, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
qqnorm(ilr.global[,1])
abline(0,1)
shapiro.test(ilr.global[,1])
shapiro.test(rnorm(5000))
n.sources <- 2
n <- 5000
p.global <- rdirichlet(n, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
qqnorm(ilr.global[,1])
abline(0,1)
shapiro.test(ilr.global[,1])
shapiro.test(rnorm(5000))
n.sources <- 2
n <- 5000
p.global <- rdirichlet(n, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
qqnorm(ilr.global[,1])
abline(0,1)
shapiro.test(ilr.global[,1])
shapiro.test(rnorm(5000))
n.sources <- 5
n <- 5000
p.global <- rdirichlet(n, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
qqnorm(ilr.global[,1])
abline(0,1)
shapiro.test(ilr.global[,1])
shapiro.test(rnorm(5000))
n.sources <- 5
n <- 5000
p.global <- rdirichlet(n, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
qqnorm(ilr.global[,1])
abline(0,1)
shapiro.test(ilr.global[,1])
shapiro.test(rnorm(5000))
n.sources <- 5
n <- 5000
p.global <- rdirichlet(n, alpha = rep(1, n.sources))
hist(vars[,1])
gmean <- matrix(NA, nrow = n, ncol = n.sources -1)
ilr.global <-  matrix(NA, nrow = n, ncol = n.sources -1)
for(src in 1:(n.sources-1)){
for (j in 1:n){
gmean[j, src] <- prod(p.global[j, 1:src])^(1/src);
ilr.global[j, src] <- sqrt(src/(src+1))*log(gmean[j, src]/p.global[j, src+1]); # page 296, Egozcue 2003
}
}
qqnorm(ilr.global[,1])
abline(0,1)
shapiro.test(ilr.global[,1])
shapiro.test(rnorm(5000))
library(vocc)
link <- "https://www.metoffice.gov.uk/hadobs/hadisst/data/HadISST1_SST_1990-1999.ascii.gz"
download.file(link, "hadisst.ascii.gz")
r <- read.csv(gzfile("hadisst.ascii.gz"))
str(r)
head(r)
library(R.utils)
gunzip("hadisst.ascii.gz")
r <- raster("hadisst.ascii")
r <- raster("hadisst.ascii")
r1 <- ersst(2010, 10)
library(rnoaa)
r1 <- ersst(2010, 10)
r1
r <- raster(r1, vars = "sst")
r <- raster(r1, vars = "sst", ncdf = TRUE)
r <- raster(r1, vars = "sst", ncdf = TRUE)
class(r1)
r <- raster(r1, varname = "sst", ncdf = TRUE)
raster
showMethods("raster")
r <- stack(r1, varname = "sst", ncdf = TRUE)
r <- stack(r1, varname = "sst")
library(raster)
setwd("~/Code/fishscape")
setwd("~/Code/fishscape")
dat <- read.csv("data-raw/fish-hab-db_v1.csv")
library(dplyr)
head(dat)
filter(dat, HabitatZone == "benthopelagic")
d2 <- filter(dat, HabitatZone == "benthopelagic")
head(d2)
d2 %>% group_by(Lifestage) %>% summarize(count = n())
dat %>%
group_by(Lifestage, HabitatZone) %>%
summarize(count = n())
library(ggplot2)
library(maps)
names(dat)
map("world")
map("world")
points(dat$Lon, dat$Lat, col = "red", pch = 16)
unique(dat$FishSp)
d2 <- filter(dat, FishSp == "thunnus thynnus")
map("world")
points(d2$Lon, d2$Lat, col = "red", pch = 16)
head(dat)
